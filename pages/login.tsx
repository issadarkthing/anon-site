import Head from "next/head";
import styles from '@/styles/Home.module.css'
import Box from "@mui/material/Box";
import Typography from "@mui/material/Typography";
import TextField from "@mui/material/TextField";
import Button from "@mui/material/Button";
import { useRef, useState } from "react";
import CircularProgress from "@mui/material/CircularProgress";
import cookie from "js-cookie";


export default function login() {
  const passwordRef = useRef<HTMLInputElement>();
  const [loading, setLoading] = useState(false);
  const [status, setStatus] = useState("");

  const onSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    const token = passwordRef.current?.value;

    if (!token) {
      return;
    }

    setLoading(true);
    const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/authenticate`, {
      method: "POST",
      headers: {
        token,
      }
    });
    setLoading(false);

    if (res.ok) {
      setStatus("Login successfully");
      cookie.set("token", token);

    } else {

      if (res.status === 401) {
        setStatus("Please enter the correct password");
      } else {
        setStatus("An error occured while logging in");
      }
    }

    if (passwordRef.current) {
      passwordRef.current.value = "";
    }
  }

  return (
    <>
      <Head>
        <title>Anon Messaging</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Box
          display="flex" 
          flexDirection="column" 
          gap="20px"
          sx={(theme) => ({
            [theme.breakpoints.up("lg")]: {
              width: "40vw",
            },
            [theme.breakpoints.up("md")]: {
              width: "50vw",
            },
            [theme.breakpoints.up("sm")]: {
              width: "80vw",
            },
            [theme.breakpoints.down("sm")]: {
              width: "90vw",
            },
          })}
        >
          <Typography variant="h4">
            ðŸ“¨ Anon Messaging
          </Typography>
          <Typography variant="body1">
            Entering admin route, please enter the password.
          </Typography>
          <form onSubmit={onSubmit}>
            <Box 
              display="flex"
              flexDirection="column" 
              gap="20px"
            >
              <TextField
                id="password"
                label="password"
                fullWidth
                type="password"
                focused
                inputRef={passwordRef}
                InputProps={{ 
                  sx: { color: "whitesmoke" } 
                }}
                FormHelperTextProps={{
                  sx: { color: "whitesmoke" }
                }}
              />
              <Button type="submit" variant="contained" >
                  {loading ? <CircularProgress sx={{ color: "whitesmoke" }} size={25} /> : "login"}
              </Button>
              <Typography variant="caption">{status}</Typography>
            </Box>
          </form>
        </Box>
      </main>
    </>
  )
}
